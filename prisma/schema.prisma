// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Project {
  id          String   @id @default(cuid())
  title       String
  description String
  imageUrl    String?
  projectUrl  String?
  githubUrl   String?
  technologies String[]
  featured    Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("projects")
}

model Skill {
  id          String   @id @default(cuid())
  name        String
  category    String
  level       Int      @default(0) // 0-100
  icon        String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("skills")
}

model Experience {
  id          String   @id @default(cuid())
  company     String
  position    String
  description String
  startDate   DateTime
  endDate     DateTime?
  current     Boolean  @default(false)
  location    String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("experiences")
}

model Contact {
  id        String   @id @default(cuid())
  name      String
  email     String
  subject   String
  message   String
  createdAt DateTime @default(now())

  @@map("contacts")
}

model ChatRoom {
  id          String      @id @default(cuid())
  name        String
  description String?
  isActive    Boolean     @default(true)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  messages    ChatMessage[]

  @@map("chat_rooms")
}

model ChatMessage {
  id        String   @id @default(cuid())
  content   String
  username  String
  userEmail String?
  userAvatar String?
  isAdmin   Boolean  @default(false)
  roomId    String
  room      ChatRoom @relation(fields: [roomId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())

  @@map("chat_messages")
}

model Admin {
  id        String   @id @default(cuid())
  username  String   @unique
  email     String?  @unique
  password  String
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("admins")
}
